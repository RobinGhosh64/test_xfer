<project name="tvh" basedir="." default="install">

	<!-- project-specific variables -->
	<property name="jsp.dir.name" value="manage" />
	<property name="package.name" value="${jsp.dir.name}.war" />
	<property name="webapp.dir" value="/usr/share/apache-tomcat-7.0.32/webapps" />

	<property environment="env" />
	<property name="build.dir" value="build" />
	<property file="${build.dir}/build.${env.HOSTNAME}" />

	<property name="lib.dir" value="lib" />
	<property name="pages.dir" value="WebRoot" />
	<property name="src.dir" value="src" />
	<property name="src.tests.dir" value="src-tests" />
	<property name="resources.dir" value="resources" />
	<property name="endorsed.dir" value="endorsed" />
	<property name="dest.dir" value="target" />

	<!-- put everything in a temp folder with the right structure during the build -->
	<property name="temp.dir" value="temp" />
	<property name="temp.dir.web-inf" value="${temp.dir}/WEB-INF" />
	<property name="temp.dir.lib" value="${temp.dir.web-inf}/lib" />
	<property name="temp.dir.classes" value="${temp.dir.web-inf}/classes" />
	<property name="temp.dir.meta-inf" value="${temp.dir}/META-INF" />

	<property name="package.file" value="${dest.dir}/${package.name}" />

	<path id="build.class.path">
		<fileset dir="${pages.dir}/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>

	</path>

    <path id="eclipseClassPath">
        <pathelement location="${endorsed.dir}/lib/javax.servlet.jar"/>
        <pathelement location="${endorsed.dir}/lib/javax.servlet.jsp.jar"/>
    </path>

	<target name="clean">
		<delete failonerror="false">
			<fileset dir="${dest.dir}" includes="**/*" />
		</delete>
		<delete dir="${temp.dir}" />
		<delete dir="${temp.dir.classes}" />
		<delete dir="${temp.dir.meta-inf}" />
		<delete dir="${temp.dir.web-inf}" />
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${dest.dir}" />
		<mkdir dir="${temp.dir}" />
		<mkdir dir="${temp.dir.lib}" />
		<mkdir dir="${temp.dir.meta-inf}" />
		<mkdir dir="${temp.dir.web-inf}" />
		<mkdir dir="${temp.dir.classes}" />
	</target>

	<!-- COMPILE -->
	<target name="compile" depends="prepare">
		<echo>=== COMPILE ===</echo>

		<echo>Compiling ${src.dir} files ...</echo>
		<javac debug="on" target="1.5" srcdir="${src.dir}" destdir="${temp.dir.classes}" includes="**/*">
			<classpath refid="build.class.path" />
			<classpath refid="eclipseClassPath" />

		</javac>

		<!-- compile files on the src-tests path -->
		<!--
		<echo>Compiling ${src.tests.dir} files ...</echo>
		<javac debug="on" srcdir="${src.tests.dir}" destdir="${temp.dir.classes}" includes="com/**">
			<classpath refid="build.class.path" />
		</javac>
		-->
	</target>

	<!-- PACKAGE -->
	<target name="package" depends="compile">
		<echo>=== PACKAGE ===</echo>

		<!-- copy the config files -->
		<copy file="${resources.dir}/MANIFEST.MF" tofile="${temp.dir.meta-inf}/MANIFEST.MF" overwrite="true" />
			<copy file="${resources.dir}/jdbc.properties" tofile="${temp.dir.web-inf}/jdbc.properties" overwrite="true" />
		<!--<copy file="${pages.dir}/WEB-INF/devgateway-servlet.xml" tofile="${temp.dir.web-inf}/devgateway-servlet.xml" overwrite="true" />
	    -->

		<copy todir="${temp.dir.classes}">
			<fileset dir="${resources.dir}">
				<exclude name="web.xml"/>
				<exclude name="MANIFEST.MF"/>
			</fileset>
		</copy>

		<!-- the ant war task. with all resources in place, create the war file -->
		<war destfile="${package.file}" webxml="${pages.dir}/WEB-INF/web.xml" basedir="${temp.dir}">
			<fileset dir="${pages.dir}" />
			<lib dir="${pages.dir}/WEB-INF/lib" />

		</war>
	</target>

	<!-- JUST DEPLOY THE JSP's -->
	<target name="jsps">
		<echo>=== DEPLOY JSP'S ===</echo>
		<!-- move all..-->
		<copy todir="${webapp.dir}/${jsp.dir.name}">
			<fileset dir="${pages.dir}">
				<include name="**/*.jsp" />
				<include name="**/*.html" />
				<include name="**/*.css" />
				<include name="**/*.gif" />
				<include name="**/*.jpg" />
				<include name="**/*.png" />
				<include name="**/*.js" />
			</fileset>
		</copy>
	</target>

	<!-- INSTALL -->
	<target name="install" depends="package">
		<echo>=== INSTALL ===</echo>
		<copy file="${webapp.dir}/${package.name}" tofile="../old/manage_old.war" overwrite="true" />
		<!-- <copy file="${package.file}" tofile="${webapp.dir}/${package.name}" overwrite="true" /> -->
	</target>

</project>